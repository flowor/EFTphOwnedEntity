// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EFTphOwnedEntity.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240326180355_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.17")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EFTphOwnedEntity.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnimalId"));

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("AnimalId");

                    b.ToTable("Animals");

                    b.HasDiscriminator<int>("Type");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EFTphOwnedEntity.Cat", b =>
                {
                    b.HasBaseType("EFTphOwnedEntity.Animal");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("EFTphOwnedEntity.Dog", b =>
                {
                    b.HasBaseType("EFTphOwnedEntity.Animal");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("EFTphOwnedEntity.Animal", b =>
                {
                    b.OwnsOne("EFTphOwnedEntity.Part", "Head", b1 =>
                        {
                            b1.Property<int>("AnimalId")
                                .HasColumnType("int");

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals");

                            b1.ToJson("Head");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Current", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Prior", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.Navigation("Current")
                                .IsRequired();

                            b1.Navigation("Prior")
                                .IsRequired();
                        });

                    b.OwnsOne("EFTphOwnedEntity.Part", "Legs", b1 =>
                        {
                            b1.Property<int>("AnimalId")
                                .HasColumnType("int");

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals");

                            b1.ToJson("Legs");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Current", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Prior", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.Navigation("Current")
                                .IsRequired();

                            b1.Navigation("Prior")
                                .IsRequired();
                        });

                    b.OwnsOne("EFTphOwnedEntity.Part", "Torso", b1 =>
                        {
                            b1.Property<int>("AnimalId")
                                .HasColumnType("int");

                            b1.Property<string>("Comment")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("AnimalId");

                            b1.ToTable("Animals");

                            b1.ToJson("Torso");

                            b1.WithOwner()
                                .HasForeignKey("AnimalId");

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Current", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.OwnsOne("EFTphOwnedEntity.AuctionDetail", "Prior", b2 =>
                                {
                                    b2.Property<int>("PartAnimalId")
                                        .HasColumnType("int");

                                    b2.Property<decimal?>("Best")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Min")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.Property<decimal?>("Worst")
                                        .HasColumnType("decimal(29, 6)");

                                    b2.HasKey("PartAnimalId");

                                    b2.ToTable("Animals");

                                    b2.WithOwner()
                                        .HasForeignKey("PartAnimalId");
                                });

                            b1.Navigation("Current")
                                .IsRequired();

                            b1.Navigation("Prior")
                                .IsRequired();
                        });

                    b.Navigation("Head")
                        .IsRequired();

                    b.Navigation("Legs")
                        .IsRequired();

                    b.Navigation("Torso")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
